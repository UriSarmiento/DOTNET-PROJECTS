// <auto-generated />
using ECOMM.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECOMM.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.6.23329.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECOMM.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            DisplayOrder = 1,
                            Name = "Action"
                        },
                        new
                        {
                            CategoryId = 2,
                            DisplayOrder = 2,
                            Name = "SciFi"
                        },
                        new
                        {
                            CategoryId = 3,
                            DisplayOrder = 3,
                            Name = "Comedy"
                        },
                        new
                        {
                            CategoryId = 4,
                            DisplayOrder = 4,
                            Name = "Romance"
                        });
                });

            modelBuilder.Entity("ECOMM.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Author = "Caulo Poelho",
                            CategoryId = 3,
                            Description = "Coleccion del maestrazo",
                            ISBN = "1024010601",
                            ImageUrl = "",
                            ListPrice = 20.5,
                            Price = 5.0,
                            Price100 = 2.5,
                            Price50 = 3.5,
                            Title = "Coleccion Paulo Coelho"
                        },
                        new
                        {
                            ProductId = 2,
                            Author = "Ay Rubiuh no seas malo",
                            CategoryId = 2,
                            Description = "Obra maestra de la literatura moderna",
                            ISBN = "1024010602",
                            ImageUrl = "",
                            ListPrice = 20.5,
                            Price = 5.0,
                            Price100 = 2.5,
                            Price50 = 3.5,
                            Title = "El libro troll del Rubius"
                        },
                        new
                        {
                            ProductId = 3,
                            Author = "Sancho Panza",
                            CategoryId = 4,
                            Description = "Clasico",
                            ISBN = "1024010603",
                            ImageUrl = "",
                            ListPrice = 20.5,
                            Price = 5.0,
                            Price100 = 2.5,
                            Price50 = 3.5,
                            Title = "El cipote de la mancha"
                        },
                        new
                        {
                            ProductId = 4,
                            Author = "Charlie Chaplin",
                            CategoryId = 1,
                            Description = "Senor de bigote chistoso escribe un libro y lo publica",
                            ISBN = "1024010604",
                            ImageUrl = "",
                            ListPrice = 20.5,
                            Price = 5.0,
                            Price100 = 2.5,
                            Price50 = 3.5,
                            Title = "Mein Kampf"
                        });
                });

            modelBuilder.Entity("ECOMM.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            ActiveFlag = true,
                            Password = "Admin1997",
                            UserName = "Administrator"
                        });
                });

            modelBuilder.Entity("ECOMM.Models.Product", b =>
                {
                    b.HasOne("ECOMM.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
